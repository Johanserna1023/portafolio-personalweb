---
import IconAstro from "../habilidades/IconAstro.astro";
import IconNextjs from "../habilidades/IconNextjs.astro";
import IconRadix from "../habilidades/IconRadix.astro";
import IconReactQuery from "../habilidades/IconReactQuery.astro";
import IconRedux from "../habilidades/IconRedux.astro";
import IconTailwind from "../habilidades/IconTailwind.astro";
import IconTypeScript from "../habilidades/IconTypeScript.astro";
import IconZustand from "../habilidades/IconZustand.astro";
import IconStripe from "../habilidades/IconStripe.astro";

type Technology = {
  icono?: string | null;
  class?: string | null;
};
export interface Props {
  title: string;
  img: string;
  description: string;
  technologies?: Technology[];
  link: string;
}

const { technologies, title, img, description, link } = Astro.props;

enum TYPESICONS {
  Tailwindcss = "Tailwindcss",
  Astro = "Astro",
  Redux ="Redux",
  Radix = "Radix",
  ReactQuery = "ReactQuery",
  NextJs = "NextJs",
  TypeScript = "TypeScript",
  Zustand = "Zustand",
  Stripe = "Stripe",
}
---

<li class="li-proyects">
  <img src={img} alt={title} loading="lazy" />
  <p class="title-proyect">{title}</p>
  <p class="description-proyect">
    {description}
  </p>
  <p class="title-technologies">tecnologías usadas</p>
  <div class="container-technologies">
    {
      technologies.map((technologi) => {
        function ValidarIcono(icono : string) {
          if (icono === TYPESICONS.Tailwindcss) return <IconTailwind />;
          if (icono === TYPESICONS.Astro) return <IconAstro />;
          if (icono === TYPESICONS.Redux) return <IconRedux />;
          if (icono === TYPESICONS.Radix) return <IconRadix />;
          if (icono === TYPESICONS.ReactQuery) return <IconReactQuery />;
          if (icono === TYPESICONS.NextJs) return <IconNextjs />;
          if (icono === TYPESICONS.TypeScript) return <IconTypeScript />;
          if (icono === TYPESICONS.Zustand) return <IconZustand />;
          if (icono === TYPESICONS.Stripe) return <IconStripe />;
          return;
        }
        return (
          <i class={`${technologi?.class ? technologi?.class : ""}`}>
            {ValidarIcono(technologi?.icono)}
          </i>
        );
      })
    }
  </div>
  <div class="container-link-proyect">
    <a href={link} target="_blank">Ver más</a>
  </div>
</li>
